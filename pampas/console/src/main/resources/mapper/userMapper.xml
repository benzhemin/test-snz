<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
    <resultMap id="userMap" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="email" column="email"/>
        <result property="realName" column="real_name"/>
        <result property="loginAt" column="login_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="columns">
        name, password, status, email, real_name, login_at, created_at, updated_at
    </sql>

    <select id="load" parameterType="long" resultMap="userMap">
        select id,
        <include refid="columns"/>
        from users where id=#{id}
    </select>

    <select id="findByName" parameterType="string" resultMap="userMap">
        select id,
        <include refid="columns"/>
        from users where name=#{name}
    </select>

    <!-- 插入用户： 1.由数据库生成id并赋值到user对象  -->
    <insert id="create" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into users (
        <include refid="columns"/>
        )
        values (#{name},#{password},#{status},#{email},#{realName}, #{loginAt},
        now(),now())
    </insert>

    <update id="update" parameterType="User">
        update users
        <set>
            updated_at=now(),
            <if test="status !=null">status=#{status},</if>
            <if test="email != null">email=#{email},</if>
            <if test="realName != null">real_name=#{realName},</if>
            <if test="password != null">password=#{password},</if>
            <if test="loginAt !=null">login_at=now(),</if>
        </set>
        where id=#{id}
    </update>

    <update id="updatePassword" parameterType="map">
        update users set updated_at=now(), password=#{password} where id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from users where id=#{id}
    </delete>

    <!--pagination-->
    <select id="count" parameterType="map" resultType="long">
        select count(1) from users
        <where>
            <if test="name != null">name like concat('%', #{name},'%')</if>
        </where>
    </select>

    <select id="paging" parameterType="User" resultMap="userMap">
        select id,
        <include refid="columns"/>
        from users
        <where>
            <if test="name != null">name like concat('%', #{name},'%')</if>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>


    <select id="loads" resultMap="userMap">
        select id,
        <include refid="columns"/>
        from users
        where id in
        <foreach collection="list" open="(" separator=","
                 close=")" item="id">
            #{id}
        </foreach>
    </select>
</mapper>
