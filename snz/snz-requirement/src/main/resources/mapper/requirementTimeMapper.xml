<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 创建需求时确认每个阶段的时间长度信息 -->
<mapper namespace="RequirementTime">
    <resultMap id="requirementTimeMap" type="RequirementTime">
        <id property="id" column="id"/>
        <result property="requirementId" column="requirement_id"/>
        <result property="type" column="type"/>
        <result property="predictStart" column="predict_start"/>
        <result property="predictEnd" column="predict_end"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="actualStart" column="actual_start"/>
        <result property="actualEnd" column="actual_end"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="columns">
        requirement_id, type, predict_start, predict_end, user_id, user_name, actual_start, actual_end, created_at, updated_at
    </sql>

    <insert id="create" parameterType="requirementTime" useGeneratedKeys="true" keyProperty="id">
        insert into snz_requirement_times (<include refid="columns"/>) values (#{requirementId},#{type},#{predictStart}, #{predictEnd},
        #{userId}, #{userName}, #{actualStart}, #{actualEnd}, now(), now())
    </insert>

    <insert id="createBatch" parameterType="requirementTime" useGeneratedKeys="true">
        insert into snz_requirement_times (<include refid="columns"/>)
        values
        <foreach collection="list" item="time" index="index" separator="," >
            (#{time.requirementId}, #{time.type}, #{time.predictStart}, #{time.predictEnd}, #{time.userId}, #{time.userName}, #{time.actualStart}, #{time.actualEnd}, now(), now())
        </foreach>
    </insert>

    <update id="update" parameterType="requirementTime">
        update snz_requirement_times
        <set>
            <if test="predictStart!=null">predict_start=#{predictStart},</if>
            <if test="predictEnd!=null">predict_end=#{predictEnd},</if>
            <if test="userId!=null">user_id=#{userId},</if>
            <if test="userName!=null">user_name=#{userName},</if>
            <if test="actualStart!=null">actual_start=#{actualStart},</if>
            <if test="actualEnd!=null">actual_end=#{actualEnd},</if>
            updated_at = now()
        </set>
        where id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from snz_requirement_times where id=#{id}
    </delete>

    <select id="findById" parameterType="long" resultMap="requirementTimeMap">
        select id, <include refid="columns"/>
        from snz_requirement_times where id=#{id}
    </select>

    <select id="findByRequirementId" parameterType="long" resultMap="requirementTimeMap">
        select id, <include refid="columns"/>
        from snz_requirement_times where requirement_id=#{requirementId}
    </select>

    <select id="findByType" parameterType="map" resultMap="requirementTimeMap">
        select id, <include refid="columns"/>
        from snz_requirement_times where requirement_id=#{requirementId} and type=#{type}
    </select>

    <select id="findByTypes" parameterType="map" resultMap="requirementTimeMap">
        select id, <include refid="columns"/>
        from snz_requirement_times where requirement_id=#{requirementId} and
        type IN
        <foreach collection="types" separator="," open="(" close=")" item="type">
            #{type}
        </foreach>
    </select>
</mapper>